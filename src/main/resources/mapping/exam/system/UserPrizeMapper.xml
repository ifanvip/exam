<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hnzxl.exam.system.dao.UserPrizeMapper" >
  <resultMap id="BaseResultMap" type="cn.hnzxl.exam.system.model.UserPrize" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="valid_code" property="validCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, valid_code, create_time, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user_prize
    where user_id = #{userId}
  </select>
  <delete id="deleteByPrimaryKey" >
    delete from user_prize
    where user_id = #{userId}
  </delete>
  <insert id="insert" parameterType="cn.hnzxl.exam.system.model.UserPrize"  useGeneratedKeys="true" keyProperty="userId">
    insert into user_prize (user_id, user_name, valid_code, 
      create_time, flag)
    values (#{userId}, #{userName}, #{validCode}, 
      #{createTime}, #{flag})
  </insert>
  <insert id="insertSelective" parameterType="cn.hnzxl.exam.system.model.UserPrize"  useGeneratedKeys="true" keyProperty="userId">
    insert into user_prize
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="validCode != null" >
        valid_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="userName != null" >
        #{userName},
      </if>
      <if test="validCode != null" >
        #{validCode},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="flag != null" >
        #{flag},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hnzxl.exam.system.model.UserPrize" >
    update user_prize
    <set >
      <if test="userName != null" >
        user_name = #{userName},
      </if>
      <if test="validCode != null" >
        valid_code = #{validCode},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>
      <if test="flag != null" >
        flag = #{flag},
      </if>
    </set>
    where user_id = #{userId}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hnzxl.exam.system.model.UserPrize" >
    update user_prize
    set user_name = #{userName},
      valid_code = #{validCode},
      create_time = #{createTime},
      flag = #{flag}
    where user_id = #{userId}
  </update>
  
  
  <sql id="Base_Dynamic_Where">
		<where>
			<if test="@Ognl@isNotEmpty(name)">
				AND user_name like #{name}
			</if>
			<if test="@Ognl@isNotEmpty(validCode)">
				AND valid_code like #{validCode}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeString)">
				AND date_format(create_time,'%Y-%m-%d') = #{createTimeString}
			</if>
		</where>
	</sql>
	<select id="selectAll" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from user_prize
		<include refid="Base_Dynamic_Where" />
		<if test="sortField != null">
			order by ${sortField} ${sortOrder}
		</if>
		<if test="sortField == null">
			order by create_time desc
		</if>
	</select>
</mapper>